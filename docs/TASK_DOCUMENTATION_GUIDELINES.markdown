# راهنمای مستندسازی تسک‌ها (نسخه حرفه‌ای)

این سند دستورالعمل کامل برای مستندسازی تسک‌ها در پروژه‌های NestJS را ارائه می‌دهد. تمرکز ویژه روی **رفتار دقیق تسک، ارتباط با جداول و فیلدها، تغییرات کد و APIها** دارد تا توسعه‌دهنده بعدی بتواند بدون دیدن کد، تسک را درک کند.

---

## ۱. محل داکیومنت تسک‌ها

* مسیر: `docs/tasks/`
* نام فایل: `[shamsiDate]-[TaskID]-[TaskName].md`

  * مثال: `1404-05-01-T123-UserManagement.md`
* برای آپدیت‌ها: `[shamsiDate]-[TaskID]-[TaskName]-v[n].md`

---

## ۲. قالب داکیومنت حرفه‌ای

### ۲.۱ عنوان تسک

```
T123: پیاده‌سازی مدیریت کاربران
```

### ۲.۲ تاریخ شمسی

```
1404/05/01
```

### ۲.۳ توضیح کلی

* هدف تسک: توضیح کوتاه درباره مشکل یا نیاز
* ابزارها و کتابخانه‌ها: TypeORM, JWT, NestJS و غیره
* قواعد و مستندهای مرتبط: SWAGGER\_GUIDELINES.markdown, API\_GUIDELINES.markdown

### ۲.۴ رفتار دقیق تسک (Behavior)

* گام به گام، دقیقا چه اتفاقی می‌افتد:

  1. تولید داده‌ها (مثال: OTP 4 رقمی)
  2. بررسی وضعیت جداول مرتبط (مثال: شماره تلفن در `users`)

     * شرایط خاص و منطق تصمیم‌گیری (مثال: canUseReferral)
  3. ذخیره رکوردها در جدول‌ها (مثال: `otp_codes`)

     * فیلدها و مقداردهی (`createdAt`, `expiresAt`, `incomingReferral`)
  4. عملیات خروجی (مثال: ارسال OTP به کاربر)
* نکته: تمام تغییرات مرتبط با جداول و فیلدها حتماً ذکر شوند.
* اگر جدول یا فیلدی اضافه شد → نام جدول و فیلد + نوع تغییر + migration

### ۲.۵ جداول و ارتباطات

* جدول‌های اصلی و ارتباطات:

  * جدول اصلی: مثال `otp_codes`
  * ارتباط با جداول دیگر: مثال `users` برای بررسی شماره تلفن
* فیلدهای کلیدی:

  * نام فیلد + نوع + توضیح
* تغییرات دیتابیس:

  * اضافه شدن جدول/فیلد
  * migration لازم: نام فایل و مسیر

### ۲.۶ APIها و Endpointها

* لیست endpointهای مرتبط:

  * روش: POST/GET/PUT/DELETE
  * مسیر: `/api/...`
  * ورودی: نام فیلد + نوع
  * خروجی: نام فیلد + نوع
* نکته: هر تغییر در API حتماً مستند شود

### ۲.۷ مراحل انجام (Step by Step)

1. ایجاد ماژول‌ها
2. تعریف سرویس‌ها و کنترلرها
3. تغییر مدل‌ها یا migration
4. اعمال منطق اصلی تسک
5. تست و بررسی

### ۲.۸ تست‌ها

* مسیر فایل تست: `src/tests/[FeatureName].spec.ts`
* سناریوهای تست: لیست کامل
* پوشش تست: ≥ 80%

### ۲.۹ نکات تکمیلی

* محدودیت‌ها و اعتبارسنجی‌ها
* یادداشت‌های مهم برای توسعه‌دهنده بعدی
* ارجاع به مستندهای مرتبط

### ۲.۱۰ تغییرات نسبت به نسخه قبلی (در صورت آپدیت)

* فیلدها/جدول‌های اضافه شده یا تغییر یافته
* تغییرات منطق تسک
* تغییرات API
* تست‌ها یا موارد جدید

---

## ۳. نکات مهم

* مستندسازی باید **دستوری، خوانا و گام‌به‌گام** باشد.
* **رفتار تسک همیشه با جزئیات و مثال** ثبت شود.
* هر تغییر در **دیتابیس یا API** حتماً مستند شود.
* از تکرار متن پرهیز و ارجاع داده شود.

---

## منابع مرتبط

* [SWAGGER\_GUIDELINES.markdown](./SWAGGER_GUIDELINES.markdown) - مستندسازی API
* [CODING\_GUIDELINES.markdown](./CODING_GUIDELINES.markdown) - استاندارد کدنویسی
* [before\_task.markdown](./before_task.markdown) - چک‌لیست قبل از تسک
